# Configuration file to set arguments for GCsnap.
# To change argument, change: value: entry.
# E.g. value: 1 to value: 2
# ---------------------------------------
out-label:
    value: default
    type: str
    help: Name of output directory. If default, name of the input file. Argument is ignored when targets are in .clans files or when multiple target files are provided.
n-nodes:
    value: 1
    type: int
    help: Number of nodes to use (SLURM --nodes).
n-ranks-per-node:
    value: 4
    type: int
    help: Number of MPI ranks per node to use (SLURM --ntasks-per-node).
n-cpus-per-rank:
    value: 1
    type: int
    help: Number of cores per rank to use (SLURM --cpus-per-task) for MMseqs2. Total number of CPU cores per node needed = n-ranks-per-node * n-cpus-per-rank.
data-path:
    value: /storage/shared/msc/gcsnap_data/
    type: str
    help: Path to the data folder.
tmp-mmseqs-folder:
    value: None
    type: str
    help: The temporary folder to store mmseqs files. May be changed so that intermediary mmseqs files are saved somewhere else then the automatic 'out-label' directory.
mmseqs-executable-path:
    value: None
    type: str
    help: Path of MMseqs executable (i.e., mmseqs.bat) if not installed in Conda environment.
collect-only:
    value: False
    type: bool
    help: Boolean statement to make GCsnap collect genomic contexts only, without comparing them.
clans-patterns:
    value: None
    type: str
    help: Patterns to identify the clusters to analyse. They will be used to select the individual clusters in the clans map to analyse.
clans-file:
    value: None
    type: str
    help: Used only for advanced interactive output representation (Clans file if the input is a clans file and -operon_cluster_advanced is set to True).
n-flanking5:
    value: 4
    type: int
    help: Number of flanking sequences to take on 5' end.
n-flanking3:
    value: 4
    type: int
    help: Number of flanking sequences to take on 3' end.
exclude-partial:
    value: True
    type: bool
    help: Exclude partial operon/genomic_context blocks. If turned off, partial cases will still be ignored to get the most common genomic features.
max-evalue:
    value: 0.001
    type: float
    help: Max e-value at which two sequences are considered to be homologous. Required to define protein families.
default-base:
    value: 10
    type: int
    help: Artificial distance value for two sequences that do not match with an E-value better than --max-evalue.
min-coverage:
    value: 0.7
    type: float
    help: Minimum coverage of target and subject a match needs to be so that two sequences are considered to be homologous. Required to define protein families.
num-iterations:
    value: 1
    type: int
    help: Number of iterations for all-against-all searches. Required to define protein families.
get-pdb:
    value: True
    type: bool
    help: Get PDB information for representatives of the families found.
functional-annotation-files-path:
    value: None
    type: str
    help: Path to the functional annotation files. If not specified, nothing annotated.
operon-cluster-advanced:
    value: False
    type: bool
    help: Boolean statement to use the operon clustering advanced mode using PacMAP.
max-family-freq:
    value: 20
    type: int
    help: Maximum frequency of a family in the set of genomic cotexts found to be considered for advanced operon clustering.
min-family-freq:
    value: 2
    type: int
    help: Minimum frequency of a family in the set of genomic cotexts found to be considered for advanced operon clustering.
min-family-freq-accross-contexts:
    value: 30
    type: int
    help: Minimum frequency of a family in a conserved genomic context type to be considered as a member.
n-max-operons:
    value: 30
    type: int
    help: Maximum number of top most populated operon/genomic_context block types.
get-taxonomy:
    value: True
    type: bool
    help: Boolean statement to get and map taxonomy information.
annotate-TM:
    value: False
    type: bool
    help: Boolean statement to find sequence features in the flanking genes.
annotation-TM-mode:
    value: uniprot
    type: str
    help: Method to use to find transmembrane segments.
    choices: [phobius, tmhmm, uniprot]
annotation-TM-file:
    value: None
    type: str
    help: File with pre-computed transmembrane features. Only use when the targets correspond to a single project (no multiple fasta or text files).
interactive:
    value: True
    type: bool
    help: Boolean statement to make the interactive html output.
genomic-context-cmap:
    value: Spectral
    type: str
    help: Color map (as of matplotlib) to assign colors to and plot the syntenic blocks.
gc-legend-mode:
    value: species
    type: str
    help: Mode of the genomic context legend.
    choices: [species, ncbi_code]
out-format:
    value: png
    type: str
    help: Output format of the core figures.
    choices: [png, svg, pdf]
min-coocc:
    value: 0.30
    type: float
    help: Minimum maximum co-occurrence of two genes to be connected in the graphs.
in-tree:
    value: None
    type: str
    help: Input phylogenetic tree. Only use when the targets correspond to a single project (no multiple fasta or text files).
in-tree-format:
    value: newick
    type: str
    help: Format of the input phylogenetic tree.
    choices: [newick, nexus, phyloxml, phyloxml-strict, phyloxml-extended, phyloxml-complete, phyloxml-complete-strict, phyloxml-complete-extended, phyloxml-complete-extended]
sort-mode:
    value: taxonomy
    type: str
    help: Mode to sort the genomic contexts.
    choices: [taxonomy, as_input, tree, operon, operon cluster]
overwrite-config:
    value: False
    type: bool
    help: Overwrite the argument value in config file with CLI value.